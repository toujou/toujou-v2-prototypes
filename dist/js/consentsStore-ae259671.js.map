{"version":3,"file":"consentsStore-ae259671.js","sources":["../../src/components/copied/toujou-consent-widget/store-persistence.js","../../src/components/copied/toujou-consent-widget/actions/consent-actions.js","../../src/components/copied/toujou-consent-widget/reducers/consent-reducers.js","../../src/components/copied/toujou-consent-widget/consentsStore.js"],"sourcesContent":["// These functions are used so we can save and read our toujou redux state\n// using session and localStorage (so the state is persistent)\n\nexport const cookieStorage = {\n\n  /**\n   * @param {string} key\n   * @param {string} value\n   */\n  setItem(key, value) {\n    document.cookie = `${key}=${value};path=/;`;\n  },\n\n  /**\n   * @param {string} key\n   * @return {string|null}\n   */\n  getItem(key) {\n    const nameEQ = `${key}=`;\n    const ca = document.cookie.split(';');\n    for (let i = 0, max = ca.length; i < max; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1, c.length);\n      }\n      if (c.indexOf(nameEQ) === 0) {\n        return c.substring(nameEQ.length, c.length);\n      }\n    }\n    return null;\n  },\n};\n\n/**\n * Save the relevant properties of the new state into the correct storage\n *    'storageType': must be either 'sessionStorage' or 'localStorage'\n *    'itemName': String with the name of the item we want to save the state into,\n *         ex: 'consentsState'\n */\nconst saveStateToStorage = (state, storageType, itemName) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    storageType.setItem(itemName, serializedState);\n    return;\n  } catch (error) {\n    console.error(`There was an error while saving the consents data to storage: Error: ${error}`);\n  }\n};\n\n/**\n * Get correct persisted state for an item from the correct storage\n *    storeType: must be 'sessionStorate' or 'localStorage'\n *    itemName\" String with the name of the item we want to get from Storage, ex: 'consentsState'\n */\nconst loadPersistedState = (storeType, itemName) => {\n  try {\n    const serializedState = storeType.getItem(itemName);\n    if (serializedState === null) {\n      return {};\n    }\n    return JSON.parse(serializedState);\n  } catch (error) {\n    console.error(`There was a problem loading the consents data from storage. Error: ${error}`);\n    return {};\n  }\n};\n\n/**\n * Get the persisted state from storage.\n * It calls functions to get state from the session and from the local storage\n * and then return the merge of the two results\n */\nexport const toujouLoadStorageState = () => {\n  const sessionStorageData = loadPersistedState(cookieStorage, 'consentsState');\n  const localStorageData = loadPersistedState(localStorage, 'consentsState');\n  const finalData = {};\n  finalData.consents = { ...sessionStorageData.consents, ...localStorageData.consents };\n  return finalData;\n};\n\n/**\n * Because the consents may have different lifetimes,\n * we need to check which consent goes to the session or localStorage.\n * We then call the functions that will save it to the correct storage\n */\nconst prepareConsentsDataToSave = (consentsData) => {\n  const dataToSaveOnSessionStorage = {};\n  const dataToSaveOnLocalStorage = {};\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key in consentsData) {\n    if (key === 'consentBoxDismissed') { // consentBoxDismissed\n      dataToSaveOnLocalStorage[key] = consentsData[key];\n    } else if (key === 'tracking' && consentsData[key].consentLifetime === 0) { // tracking: session\n      dataToSaveOnSessionStorage[key] = consentsData[key];\n    } else if (key === 'tracking' && consentsData[key].consentLifetime > 0) { // session: local\n      dataToSaveOnLocalStorage[key] = consentsData[key];\n    } else if (consentsData[key].consentLifetime === 0) { // externals: session\n      dataToSaveOnSessionStorage[key] = consentsData[key];\n    } else if (consentsData[key].consentLifetime > 0) { // externals: LOCAL\n      dataToSaveOnLocalStorage[key] = consentsData[key];\n    }\n  }\n\n  saveStateToStorage({ consents: dataToSaveOnSessionStorage }, cookieStorage, 'consentsState');\n  saveStateToStorage({ consents: dataToSaveOnLocalStorage }, localStorage, 'consentsState');\n};\n\n/**\n * Handle the data we want to save on session or local storage\n * At the moment we want to make sure we only save the consents data\n * This function gets the 'state' from the consents reducer, just before it returns the new state\n */\nexport const handlePersistanceDataToSave = (state) => {\n  // eslint-disable-next-line no-restricted-syntax,guard-for-in\n  for (const key in state) {\n    if (key !== 'consents') {\n      console.error('Unknown data \"key\" found while saving to session / local Storage');\n      return;\n    }\n\n    prepareConsentsDataToSave(state.consents);\n  }\n};\n","export const CLEAR_CONSENT_TYPE_DATA = 'CLEAR_CONSENT_TYPE_DATA';\nexport const SAVE_ALL_CONSENTS = 'SAVE_ALL_CONSENTS';\nexport const SAVE_SINGLE_CONSENT = 'SAVE_SINGLE_CONSENT';\nexport const DISMISS_CONSENT_BOX = 'DISMISS_CONSENT_BOX';\nexport const UNDISMISS_CONSENT_BOX = 'UNDISMISS_CONSENT_BOX';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const INITIAL_STATE = {\n  consents: {\n    consentBoxDismissed: false,\n  },\n};\n\nexport const clearConsentTypeData = (consentType) => ({\n  type: CLEAR_CONSENT_TYPE_DATA,\n  payload: consentType,\n});\n\nexport const saveAllConsents = (newConsents) => ({\n  type: SAVE_ALL_CONSENTS,\n  payload: newConsents,\n});\n\nexport const saveSingleConsent = (consentType, consentData) => ({\n  type: SAVE_SINGLE_CONSENT,\n  payload: { consentType, consentData },\n});\n\nexport const dismissConsentBox = () => ({\n  type: DISMISS_CONSENT_BOX,\n});\n\nexport const undismissConsentBox = () => ({\n  type: UNDISMISS_CONSENT_BOX,\n});\n","import { handlePersistanceDataToSave } from '../store-persistence';\nimport {\n  INITIAL_STATE,\n  CLEAR_CONSENT_TYPE_DATA,\n  DISMISS_CONSENT_BOX,\n  SAVE_ALL_CONSENTS,\n  SAVE_SINGLE_CONSENT,\n  UNDISMISS_CONSENT_BOX,\n} from '../actions/consent-actions';\n\n// eslint-disable-next-line import/prefer-default-export\nfunction consentReducers(state, action) {\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case CLEAR_CONSENT_TYPE_DATA: {\n      const newClearedConsents = { ...state.consents };\n      delete newClearedConsents[action.payload];\n      return {\n        ...state,\n        consents: newClearedConsents,\n      };\n    }\n\n    case SAVE_ALL_CONSENTS: {\n      const newAllConsents = { ...state.consents, ...action.payload };\n      return {\n        ...state,\n        consents: newAllConsents,\n      };\n    }\n\n    case SAVE_SINGLE_CONSENT: {\n      const newConsentsWithSingleConsentChange = { ...state.consents };\n      // eslint-disable-next-line max-len\n      newConsentsWithSingleConsentChange[action.payload.consentType] = { ...action.payload.consentData };\n      return {\n        ...state,\n        consents: newConsentsWithSingleConsentChange,\n      };\n    }\n\n    case DISMISS_CONSENT_BOX: {\n      const newDismissedBoxConsents = { ...state.consents };\n      newDismissedBoxConsents.consentBoxDismissed = true;\n      return {\n        ...state,\n        consents: newDismissedBoxConsents,\n      };\n    }\n\n    case UNDISMISS_CONSENT_BOX: {\n      const newUndismissedBoxConsents = { ...state.consents };\n      newUndismissedBoxConsents.consentBoxDismissed = false;\n      return {\n        ...state,\n        consents: newUndismissedBoxConsents,\n      };\n    }\n  }\n\n  return state;\n}\n\nlet initialStatePushedToDataLayer = false;\n\nexport default function consentReducersExport(state = INITIAL_STATE, action) {\n  const reducedState = consentReducers(state, action);\n  handlePersistanceDataToSave(reducedState);\n\n  if (typeof window.dataLayer === 'object' && (!initialStatePushedToDataLayer || (reducedState.consents.consentBoxDismissed !== undefined && reducedState.consents.consentBoxDismissed))) {\n    window.dataLayer.push({ event: 'consent-changed', ...reducedState.consents });\n    initialStatePushedToDataLayer = true;\n  }\n\n  return reducedState;\n}\n","import { createStore, compose } from 'redux';\nimport consentReducer from './reducers/consent-reducers';\nimport { toujouLoadStorageState } from './store-persistence';\n\nfunction configureStore() {\n  // eslint-disable-next-line no-underscore-dangle,max-len,no-mixed-operators\n  const composeEnhancers = (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ trace: true, traceLimit: 25 }) || compose);\n  const composedEnhancers = composeEnhancers();\n  const persistedState = toujouLoadStorageState();\n\n  return createStore(\n    consentReducer,\n    persistedState,\n    composedEnhancers,\n  );\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport const consentsStore = configureStore();\n"],"names":["cookieStorage","key","value","nameEQ","ca","i","max","c","saveStateToStorage","state","storageType","itemName","serializedState","error","loadPersistedState","storeType","toujouLoadStorageState","sessionStorageData","localStorageData","finalData","prepareConsentsDataToSave","consentsData","dataToSaveOnSessionStorage","dataToSaveOnLocalStorage","handlePersistanceDataToSave","CLEAR_CONSENT_TYPE_DATA","SAVE_ALL_CONSENTS","SAVE_SINGLE_CONSENT","DISMISS_CONSENT_BOX","UNDISMISS_CONSENT_BOX","INITIAL_STATE","clearConsentTypeData","consentType","saveAllConsents","newConsents","saveSingleConsent","consentData","dismissConsentBox","undismissConsentBox","consentReducers","action","newClearedConsents","newAllConsents","newConsentsWithSingleConsentChange","newDismissedBoxConsents","newUndismissedBoxConsents","initialStatePushedToDataLayer","consentReducersExport","reducedState","configureStore","composedEnhancers","compose","persistedState","createStore","consentReducer","consentsStore"],"mappings":"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"}