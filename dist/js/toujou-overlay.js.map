{"version":3,"file":"toujou-overlay.js","sources":["../../src/components/toujou-overlay/toujou-overlay.ts"],"sourcesContent":["import { LitElement, PropertyValues } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\n\nenum COOKIE_STATES {\n    ACCEPTED = 'accepted',\n    REJECTED = 'rejected'\n}\n\nenum STATE {\n    OPEN = 'open',\n    CLOSED = 'closed'\n}\n\n@customElement('toujou-overlay')\nexport class ToujouOverlay extends LitElement {\n    @property({ type: String })\n    _overlayId: string | null = null;\n\n    @property({ type: HTMLElement })\n    _warningEl: Element | null = null;\n\n    @property({ type: HTMLElement })\n    _closeButton: Element | null = null;\n\n    @property({ type: Array })\n    _buttons: Element[] = [];\n\n    @property({ type: String })\n    _overlayCookie: string | false = false;\n\n    @property({ type: String, attribute: 'state', reflect: true })\n    state: string = STATE.CLOSED;\n\n    @property({ type: Boolean, attribute: 'warning-visible', reflect: true })\n    warningVisible: boolean = false;\n\n    protected createRenderRoot(): Element | ShadowRoot {\n        return this;\n    }\n\n    constructor() {\n        super();\n\n        this._handleButtonClick = this._handleButtonClick.bind(this);\n        this._handleCloseButtonClick = this._handleCloseButtonClick.bind(this);\n    }\n\n\n    connectedCallback() {\n        super.connectedCallback();\n        this._getElements();\n\n        if (location.hash === '#aaa') {\n            this._setCookie(COOKIE_STATES.ACCEPTED);\n        }\n\n        this._overlayCookie = this._checkCookie('toujou-overlay-' + this._overlayId)\n\n        if (this._buttons.length) {\n            this._buttons.forEach((button) => {\n                button.addEventListener('click', this._handleButtonClick)\n            })\n        }\n\n        if (this._closeButton) {\n            this._closeButton.addEventListener('click', this._handleCloseButtonClick)\n        }\n\n        if (!this._overlayCookie) {\n            this.state = STATE.OPEN;\n        } else if (this._overlayCookie === COOKIE_STATES.REJECTED) {\n            this.state = STATE.OPEN;\n        } else if (this._overlayCookie === COOKIE_STATES.ACCEPTED) {\n            this.state = STATE.CLOSED;\n        }\n    }\n\n    updated(_changedProperties: PropertyValues) {\n        super.updated(_changedProperties);\n\n        if (_changedProperties.has('state')) {\n            // Enable/disable body scroll via overlay-open attribute\n            document.body.toggleAttribute('overlay-open', STATE.OPEN === this.state);\n        }\n    }\n\n    disconnectedCallback() {\n        super.disconnectedCallback();\n\n        if (this._buttons.length) {\n            this._buttons.forEach((button) => {\n                button.removeEventListener('click', this._handleButtonClick);\n            })\n        }\n\n        if (this._closeButton) {\n            this._closeButton.removeEventListener('click', this._handleCloseButtonClick);\n        }\n    }\n\n    /**\n     * Close overlay when the close button is clicked\n     */\n    _handleCloseButtonClick() {\n        this.state = STATE.CLOSED;\n        this._setCookie(COOKIE_STATES.ACCEPTED)\n    }\n\n    /**\n     * Check which button was clicked and set state accordingly\n     * @param event\n     */\n    _handleButtonClick(event: Event) {\n        event.preventDefault();\n        const target = event?.target as HTMLButtonElement;\n        const choice: string | null = target.getAttribute('data-overlay-value') || null;\n\n\n        if (choice === 'no') {\n            this.state = STATE.OPEN;\n            this._setCookie(COOKIE_STATES.REJECTED);\n            this.warningVisible = true;\n        } else if (choice === 'yes') {\n            this.state = STATE.CLOSED;\n            this._setCookie(COOKIE_STATES.ACCEPTED);\n        }\n        target.blur();\n    }\n\n    /**\n     * Get necessary elements\n     */\n    _getElements(): void {\n        this._overlayId = this.getAttribute('id') || null;\n        this._warningEl = this.querySelector('.overlay__warning');\n        this._closeButton = this.querySelector('.overlay__close-button');\n        this._buttons = Array.from(this.querySelectorAll('.overlay__buttons .button'));\n    }\n\n    /**\n     * Set cookie with the correct name and state\n     * @param choice\n     */\n    _setCookie(choice: string): void {\n        document.cookie = `toujou-overlay-${this._overlayId}=${choice};path=/;`;\n    }\n\n    /**\n     * Get cookie for the current overlay\n     * @param cookieName\n     */\n    _checkCookie(cookieName: string): string | false {\n        const match = document.cookie.match(new RegExp('(^| )' + cookieName + '=([^;]+)'));\n        return match ? match[2] : false;\n    }\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'toujou-overlay': ToujouOverlay\n    }\n}\n"],"names":["ToujouOverlay","LitElement","constructor","this","_overlayId","_warningEl","_closeButton","_buttons","_overlayCookie","state","warningVisible","_handleButtonClick","bind","_handleCloseButtonClick","createRenderRoot","connectedCallback","super","_getElements","location","hash","_setCookie","_checkCookie","length","forEach","button","addEventListener","updated","_changedProperties","has","document","body","toggleAttribute","disconnectedCallback","removeEventListener","event","preventDefault","target","choice","getAttribute","blur","querySelector","Array","from","querySelectorAll","cookie","cookieName","match","RegExp","__decorateClass","property","type","String","prototype","HTMLElement","attribute","reflect","Boolean","customElement"],"mappings":"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"}