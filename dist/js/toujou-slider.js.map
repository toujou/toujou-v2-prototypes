{"version":3,"file":"toujou-slider.js","sources":["../../node_modules/@lit/reactive-element/decorators/state.js","../../src/components/toujou-slider/toujou-slider.ts"],"sourcesContent":["import{property as r}from\"./property.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function t(t){return r({...t,state:!0})}export{t as state};\n//# sourceMappingURL=state.js.map\n","import { LitElement } from 'lit'\nimport { customElement, property, state } from 'lit/decorators.js'\n// @ts-ignore\nimport Splide from \"@splidejs/splide\";\n\n@customElement('toujou-slider')\nexport class ToujouSlider extends LitElement {\n\n    /**\n     * Reference to the node that where the slider will be initialized (\".splide\")\n     */\n    @property({ type: Object })\n    splideContainer: Element | null = null;\n\n    /**\n     * Show or hide the count at the bottom of the slider\n     */\n    @property({ type: Boolean, attribute: 'show-count' })\n    showCount: Boolean = false;\n\n    /**\n     * Toggle on / off the autoplay function\n     */\n    @property({ type: Boolean, attribute: 'auto-play' })\n    autoplay: Boolean = false;\n\n    /**\n     * Count element where we display the number of the current active slide\n     * @private\n     */\n    @property()\n    private _currentIndexCountElement: HTMLElement | null = null;\n\n    /**\n     * Count element where we should the total number of slider\n     * @private\n     */\n    @property()\n    private _totalSlidesCountElement: HTMLElement | null = null;\n\n    /**\n     * Total number of slides on the page, to be used on the count element\n     * @private\n     */\n    @state()\n    private _numberOfSlides: Number = 0;\n\n    /**\n     * Index of currently active slide, to be used on the count element\n     * @private\n     */\n    @state()\n    private _activeSlideIndex: Number = 1;\n\n    /**\n     * Reference to the Splice instance\n     * @private\n     */\n    @property()\n    private splideSlider: any;\n\n    /**\n     * Number of slides to show per \"page\"\n     * Docs: https://splidejs.com/guides/options/#perpage\n     */\n    @property({ reflect: true, attribute: 'slides-to-show' })\n    slidesToShow: number = 1;\n\n    /**\n     * Number of slider to advance per move\n     * Docs: https://splidejs.com/guides/options/#permove\n     */\n    @property({ reflect: true, attribute: 'slides-per-move' })\n    slidesPerMove: number = 1;\n\n    /**\n     * Type of slider. Valid values are \"loop\", \"slide\" and \"fade\"\n     * Docs: https://splidejs.com/guides/options/#type\n     */\n    @property({ reflect: true, attribute: 'slider-type' })\n    sliderType: 'loop' | 'slide' | 'fade' = 'loop';\n\n    /**\n     * Gap between the slides\n     * Docs: https://splidejs.com/guides/options/#gap\n     */\n    @property({ reflect: true, attribute: 'slider-gap' })\n    sliderGap: string = '0';\n\n    /**\n     * Duration between automatic moves when autoplay is active\n     * Docs: https://splidejs.com/guides/options/#interval\n     */\n    @property({ reflect: true, attribute: 'autoplay-interval' })\n    autoplayInterval: string = '6000';\n\n    /**\n     * Stringified JSON with object defining the breakpoints for the slider\n     * Docs: https://splidejs.com/guides/options/#breakpoints\n     */\n    @property({ reflect: true, attribute: 'slider-breakpoints' })\n    sliderBreakpoints: string | null = null;\n\n    /**\n     * Carousel padding\n     * https://splidejs.com/guides/options/#padding\n     */\n    @property({ reflect: true, attribute: 'slider-padding' })\n    sliderPadding: string = '0';\n\n    /**\n     * Center the active slide\n     * https://splidejs.com/guides/options/#focus\n     * https://splidejs.com/guides/options/#trimspace\n     */\n    @property({ reflect: true, attribute: 'slider-focus-center' })\n    sliderFocusCenter: string | boolean = false;\n\n    /**\n     * Define the aspect ratio of the images on the carousel\n     * https://splidejs.com/guides/options/#heightratio\n     */\n    @property({ reflect: true, attribute: 'slider-aspect-ratio' })\n    sliderAspectRatio: string = '0.5625';\n\n    @property({ attribute: 'arrow-prev-aria-label' })\n    arrowPrevAriaLabel: string = '';\n\n    @property({ attribute: 'arrow-next-aria-label' })\n    arrowNextAriaLabel: string = '';\n\n    @property({ attribute: 'arrow-first-aria-label' })\n    arrowFirstAriaLabel: string = '';\n\n    @property({ attribute: 'arrow-last-aria-label' })\n    arrowLastAriaLabel: string = '';\n\n    constructor() {\n        super();\n\n        this._handlePaginationUpdate = this._handlePaginationUpdate.bind(this);\n        this._handleSliderMount = this._handleSliderMount.bind(this);\n    }\n\n    /**\n     * Disable shadow root\n     */\n    createRenderRoot() {\n        return this;\n    }\n\n    firstUpdated() {\n        this.splideContainer = this.querySelector('.splide') || null;\n\n        if (!this.splideContainer) {\n            console.error(\"TOUJOU: Could not get necessary elements to initialize the slider\");\n            return;\n        } else {\n            this._initSlider();\n        }\n    }\n\n    /**\n     * Initialize the slider with the correct options\n     * Full list of options here: https://splidejs.com/guides/options/\n     */\n    private _initSlider() {\n        let sliderOptions = {\n            classes: {\n                pagination: 'splide__pagination slider-bullets',\n                page: 'splide__pagination__page slider-bullets__bullet',\n            },\n            type: this.sliderType,\n            autoplay: this.autoplay,\n            interval: this.autoplayInterval,\n            pauseOnHover: this.autoplay,\n            pauseOnFocus: this.autoplay,\n            perPage: parseInt(String(this.slidesToShow)),\n            perMove: this.slidesPerMove,\n            gap: this.sliderGap,\n            heightRatio: this.sliderAspectRatio,\n            reducedMotion: {\n                speed: 0,\n                rewindSpeed: 0,\n                autoplay: 'pause'\n            },\n            padding: this.sliderPadding,\n            i18n: {\n                prev: this.arrowPrevAriaLabel,\n                next: this.arrowNextAriaLabel,\n                first: this.arrowFirstAriaLabel,\n                last: this.arrowLastAriaLabel,\n            }\n        }\n\n        if (this.sliderFocusCenter === 'true') {\n            // @ts-ignore\n            sliderOptions.focus = 'center';\n            // @ts-ignore\n            sliderOptions.trimSpace = false;\n        }\n\n        if (this.sliderBreakpoints) {\n            // @ts-ignore\n            sliderOptions.breakpoints = JSON.parse(this.sliderBreakpoints);\n        }\n        console.log('bbb', sliderOptions);\n\n        // @ts-ignore\n        this.splideSlider = new Splide(this.splideContainer, sliderOptions);\n\n        this.splideSlider!.on('mounted', this._handleSliderMount);\n        this.splideSlider!.on('moved', this._handlePaginationUpdate);\n\n        this.splideSlider!.mount();\n        console.log('cccc', this.splideSlider);\n    }\n\n    /**\n     * Setup the count element when the element first mounts\n     */\n    private _handleSliderMount() {\n        this._getCountInfo();\n        this._initCount();\n    }\n\n    /**\n     * Get the DOM elements that are used to display the count information\n     */\n    private _getCountInfo() {\n        this._currentIndexCountElement = this.querySelector('.slider-count__current');\n        this._totalSlidesCountElement = this.querySelector('.slider-count__total');\n    }\n\n    /**\n     * Initialize the count element and update count elements in the DOM\n     */\n    private _initCount() {\n        this._numberOfSlides = this.splideSlider.Components.Elements.slides.length;\n        this._updateSliderCount();\n    }\n\n    /**\n     * Trigger a count update whenever the pagination updates\n     * @param event\n     */\n    private _handlePaginationUpdate(event: number) {\n        this._activeSlideIndex = event + 1;\n        this._updateSliderCount()\n    }\n\n    /**\n     * Update the count elements with the correct content\n     */\n    private _updateSliderCount() {\n        this._currentIndexCountElement!.textContent = String(this._activeSlideIndex);\n        this._totalSlidesCountElement!.textContent = String(this._numberOfSlides);\n    }\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'toujou-slider': ToujouSlider\n    }\n}\n"],"names":["t","r","ToujouSlider","LitElement","sliderOptions","Splide","event","__decorateClass","property","state","customElement"],"mappings":"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"}