{"version":3,"file":"toujou-details-accordion.js","sources":["../../src/components/toujou-details-accordion/toujou-details-accordion.ts"],"sourcesContent":["import { LitElement } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { ToujouDetails } from \"../toujou-details/toujou-details\";\n\n@customElement('toujou-details-accordion')\nexport class ToujouDetailsAccordion extends LitElement {\n\n    /**\n     * Backend option, allow only on child <toujou-details> element to be open at a time\n     */\n    @property({\n        type: Boolean,\n        attribute: \"single-expand-mode\"\n    })\n    singleExpandMode: boolean = false;\n\n    /**\n     * List of all the child <toujou-details> elements\n     */\n    @property({\n        type: Array\n    })\n    toujouDetailsElements: ToujouDetails[] = [];\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        this.addEventListener('toujou-details-connected', this._handleDetailsConnected);\n        this.addEventListener('toujou-details-toggle', this._handleDetailsToggle);\n\n        this.dispatchEvent(new CustomEvent('toujou-details-accordion-connected', {\n            bubbles: true,\n            composed: true,\n            detail: {\n                accordionEl: this\n            }\n        }));\n    }\n\n    disconnectedCallback() {\n        this.removeEventListener('toujou-details-connected', this._handleDetailsConnected);\n        this.removeEventListener('toujou-details-toggle', this._handleDetailsToggle);\n    }\n\n    _handleDetailsConnected(event: Event): void {\n        this.toujouDetailsElements.push((<any>event).detail.detailsEl);\n    }\n\n    /**\n     * If we are on single-expand-mode, we must close all other <toujou-details> when a new one opens\n     *\n     * @param event\n     */\n    _handleDetailsToggle(event: Event) {\n        if (!this.singleExpandMode || !((<any>event).detail.state)) return;\n\n        const currentDetailsId = (<any>event).detail.detailsEl.id;\n        this.toujouDetailsElements.forEach((detailsEl) => {\n            if (detailsEl.id === currentDetailsId) return;\n            detailsEl.isOpen = false;\n        })\n    }\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'toujou-details-accordion': ToujouDetailsAccordion\n    }\n}\n\n"],"names":["ToujouDetailsAccordion","LitElement","event","currentDetailsId","detailsEl","__decorateClass","property","customElement"],"mappings":"wXAKa,IAAAA,EAAN,cAAqCC,CAAW,CAmBnD,aAAc,CACJ,QAXkB,KAAA,iBAAA,GAQ5B,KAAA,sBAAyC,EAIzC,CAEA,mBAAoB,CACX,KAAA,iBAAiB,2BAA4B,KAAK,uBAAuB,EACzE,KAAA,iBAAiB,wBAAyB,KAAK,oBAAoB,EAEnE,KAAA,cAAc,IAAI,YAAY,qCAAsC,CACrE,QAAS,GACT,SAAU,GACV,OAAQ,CACJ,YAAa,IACjB,CACH,CAAA,CAAC,CACN,CAEA,sBAAuB,CACd,KAAA,oBAAoB,2BAA4B,KAAK,uBAAuB,EAC5E,KAAA,oBAAoB,wBAAyB,KAAK,oBAAoB,CAC/E,CAEA,wBAAwBC,EAAoB,CACxC,KAAK,sBAAsB,KAAWA,EAAO,OAAO,SAAS,CACjE,CAOA,qBAAqBA,EAAc,CAC/B,GAAI,CAAC,KAAK,kBAAoB,CAAQA,EAAO,OAAO,MAAQ,OAEtD,MAAAC,EAAyBD,EAAO,OAAO,UAAU,GAClD,KAAA,sBAAsB,QAASE,GAAc,CAC1CA,EAAU,KAAOD,IACrBC,EAAU,OAAS,GAAA,CACtB,CACL,CACJ,EAlDIC,EAAA,CAJCC,EAAS,CACN,KAAM,QACN,UAAW,oBAAA,CACd,CAAA,EARQN,EAST,UAAA,mBAAA,CAAA,EAQAK,EAAA,CAHCC,EAAS,CACN,KAAM,KAAA,CACT,CAAA,EAhBQN,EAiBT,UAAA,wBAAA,CAAA,EAjBSA,EAANK,EAAA,CADNE,EAAc,0BAA0B,CAAA,EAC5BP,CAAA"}