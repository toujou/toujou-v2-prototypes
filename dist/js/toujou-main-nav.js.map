{"version":3,"file":"toujou-main-nav.js","sources":["../../src/components/toujou-main-nav/toujou-main-nav.ts"],"sourcesContent":["import { LitElement } from 'lit'\nimport { property } from 'lit/decorators.js'\n\nexport class ToujouMainNav extends LitElement {\n    @property({ type: Array })\n    navListItems: MainNavListItem[] = [];\n\n    protected readonly listItemSelector = '.main-nav__list-item';\n    protected readonly hasSubNavAttribute = 'has-subnav';\n    protected readonly isOpenAttribute = 'is-open';\n    protected readonly listItemLevelAttribute = 'nav-item-level';\n    protected readonly listItemChevronSelector = 'main-nav__chevron';\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n\n        this._getNavListItems();\n\n        // @ts-ignore\n        window.addEventListener('keyup', this._handleKeyUp);\n    }\n\n    protected createRenderRoot(): Element | ShadowRoot {\n        return this;\n    }\n\n    /**\n     * Get list of all the main navigation list items and start listening for click events\n     */\n    _getNavListItems = () => {\n        this.navListItems = [...this.querySelectorAll(this.listItemSelector)] as MainNavListItem[];\n\n        if (!this.navListItems) {\n            console.warn(\"TOUJOU: Main navigation has no list items!\");\n            return;\n        }\n\n        this.navListItems.forEach((listItem: MainNavListItem) => {\n            listItem.hasSubNav = listItem.hasAttribute(this.hasSubNavAttribute);\n            if (!listItem.hasSubNav) return;\n\n            listItem.isOpen = false;\n            listItem.level = listItem.getAttribute(this.listItemLevelAttribute);\n            listItem.toggleEl = listItem.querySelector('.main-nav__chevron') as HTMLElement;\n            listItem.toggleEl.addEventListener('click', () => {\n                this._toggleListItemState(listItem);\n            })\n            listItem.addEventListener('keyup', (event: KeyboardEvent) => {\n                // @ts-ignore\n                this._handleKeyUp(event, event.target);\n            });\n        })\n    }\n\n    /**\n     * - On Enter or Space click on a main nav chevron we toggle the nav item open / closed\n     * - On Esc press close the open main navigation\n     * @param   event\n     * @param   listItem\n     */\n    _handleKeyUp = (event: KeyboardEvent, listItem: MainNavListItem) => {\n        // Open list item when there is \"enter\" or \"space\" press on the item chevron\n        if (event.key === 'Enter' || event.code === 'Enter' || event.code === 'Space' || event.key === ' ') {\n            if (listItem && listItem.classList.contains(this.listItemChevronSelector)) {\n                const parentListItem = listItem.closest(this.listItemSelector) as MainNavListItem;\n                this._toggleListItemState(parentListItem);\n            }\n        }\n\n        // Close all nav items when \"Escape\" is pressed\n        if (event.key === 'Escape' || event.code === 'Escape') {\n            this._closeAllNavListItems();\n        }\n    }\n\n    /**\n     * Toggle the list item isOpen state and add / remove the isOpenAttribute accordingly\n     * @param   listItem\n     */\n    _toggleListItemState = (listItem: MainNavListItem) => {\n        listItem.isOpen = !listItem.isOpen;\n\n        if (listItem.isOpen) {\n            listItem.setAttribute(this.isOpenAttribute, '')\n            this._closeOtherOpenListItems(listItem);\n            window.addEventListener('click', this._onWindowClick);\n        } else {\n            listItem.removeAttribute(this.isOpenAttribute);\n        }\n    }\n\n    /**\n     * Close other open list items so there aren't multiple lists open at the same time\n     * (only sibling or child lists will be closed)\n     * @param   listItem\n     */\n    _closeOtherOpenListItems = (listItem: MainNavListItem) => {\n        const openSiblings: NodeListOf<MainNavListItem> | undefined = listItem.parentNode?.querySelectorAll(`${this.listItemSelector}[is-open]`);\n        if (!openSiblings) return;\n\n        openSiblings.forEach((sibling) => {\n            if (sibling.isOpen && sibling !== listItem) {\n                this._toggleListItemState(sibling);\n            }\n        })\n    }\n\n    /**\n     * Close all open navigation items\n     */\n    _closeAllNavListItems = () => {\n        this.navListItems.forEach((listItem) => {\n            if (listItem.isOpen) {\n                this._toggleListItemState(listItem);\n                window.removeEventListener('click', this._onWindowClick);\n            }\n        })\n    }\n\n    /**\n     * Close the main nav on click outside\n     * @param   event\n     */\n    _onWindowClick = (event: MouseEvent)=> {\n        const clickedEl = event.target as HTMLElement;\n        if (!clickedEl.closest('.main-nav')) {\n            this._closeAllNavListItems();\n        }\n    }\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'toujou-main-nav': ToujouMainNav\n    }\n\n    interface MainNavListItem extends HTMLElement {\n        hasSubNav: boolean,\n        isOpen: boolean,\n        level: string | null,\n        toggleEl: HTMLElement\n    }\n}\n\ncustomElements.define('toujou-main-nav', ToujouMainNav, { extends: 'nav' });\n"],"names":["ToujouMainNav","LitElement","listItem","event","parentListItem","openSiblings","_a","sibling","__decorateClass","property"],"mappings":"uUAGO,MAAMA,UAAsBC,CAAW,CAU1C,aAAc,CACJ,QATV,KAAA,aAAkC,GAElC,KAAmB,iBAAmB,uBACtC,KAAmB,mBAAqB,aACxC,KAAmB,gBAAkB,UACrC,KAAmB,uBAAyB,iBAC5C,KAAmB,wBAA0B,oBAsB7C,KAAA,iBAAmB,IAAM,CAGjB,GAFJ,KAAK,aAAe,CAAC,GAAG,KAAK,iBAAiB,KAAK,gBAAgB,CAAC,EAEhE,CAAC,KAAK,aAAc,CACpB,QAAQ,KAAK,4CAA4C,EACzD,MACJ,CAEK,KAAA,aAAa,QAASC,GAA8B,CACrDA,EAAS,UAAYA,EAAS,aAAa,KAAK,kBAAkB,EAC7DA,EAAS,YAEdA,EAAS,OAAS,GAClBA,EAAS,MAAQA,EAAS,aAAa,KAAK,sBAAsB,EACzDA,EAAA,SAAWA,EAAS,cAAc,oBAAoB,EACtDA,EAAA,SAAS,iBAAiB,QAAS,IAAM,CAC9C,KAAK,qBAAqBA,CAAQ,CAAA,CACrC,EACQA,EAAA,iBAAiB,QAAUC,GAAyB,CAEpD,KAAA,aAAaA,EAAOA,EAAM,MAAM,CAAA,CACxC,EAAA,CACJ,CAAA,EASU,KAAA,aAAA,CAACA,EAAsBD,IAA8B,CAE5D,IAAAC,EAAM,MAAQ,SAAWA,EAAM,OAAS,SAAWA,EAAM,OAAS,SAAWA,EAAM,MAAQ,MACvFD,GAAYA,EAAS,UAAU,SAAS,KAAK,uBAAuB,EAAG,CACvE,MAAME,EAAiBF,EAAS,QAAQ,KAAK,gBAAgB,EAC7D,KAAK,qBAAqBE,CAAc,CAC5C,EAIAD,EAAM,MAAQ,UAAYA,EAAM,OAAS,WACzC,KAAK,sBAAsB,CAC/B,EAOJ,KAAA,qBAAwBD,GAA8B,CACzCA,EAAA,OAAS,CAACA,EAAS,OAExBA,EAAS,QACAA,EAAA,aAAa,KAAK,gBAAiB,EAAE,EAC9C,KAAK,yBAAyBA,CAAQ,EAC/B,OAAA,iBAAiB,QAAS,KAAK,cAAc,GAE3CA,EAAA,gBAAgB,KAAK,eAAe,CACjD,EAQJ,KAAA,yBAA4BA,GAA8B,OACtD,MAAMG,GAAwDC,EAAAJ,EAAS,aAAT,YAAAI,EAAqB,iBAAiB,GAAG,KAAK,6BACvGD,GAEQA,EAAA,QAASE,GAAY,CAC1BA,EAAQ,QAAUA,IAAYL,GAC9B,KAAK,qBAAqBK,CAAO,CACrC,CACH,CAAA,EAML,KAAA,sBAAwB,IAAM,CACrB,KAAA,aAAa,QAASL,GAAa,CAChCA,EAAS,SACT,KAAK,qBAAqBA,CAAQ,EAC3B,OAAA,oBAAoB,QAAS,KAAK,cAAc,EAC3D,CACH,CAAA,EAOL,KAAA,eAAkBC,GAAqB,CACjBA,EAAM,OACT,QAAQ,WAAW,GAC9B,KAAK,sBAAsB,CAC/B,CApHJ,CAEA,mBAAoB,CAChB,MAAM,kBAAkB,EAExB,KAAK,iBAAiB,EAGf,OAAA,iBAAiB,QAAS,KAAK,YAAY,CACtD,CAEU,kBAAyC,CACxC,OAAA,IACX,CAyGJ,CAhIIK,EAAA,CADCC,EAAS,CAAE,KAAM,MAAO,CAAA,EADhBT,EAET,UAAA,eAAA,CAAA,EA+IJ,eAAe,OAAO,kBAAmBA,EAAe,CAAE,QAAS,MAAO"}