{"version":3,"file":"toujou-burger-button.js","sources":["../../src/components/toujou-burger-button/toujou-burger-button.ts"],"sourcesContent":["import { LitElement, html } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\n\n/**\n * Burger button class which dispatches events on click and listens to media query changes\n */\n@customElement('toujou-burger-button')\nexport class ToujouBurgerButton extends LitElement {\n    /**\n     * Internal state\n     */\n    @property({ type: Boolean })\n    _state: boolean = false;\n\n    // constants\n    clickEventName = 'toujou-burger-button-click';\n    targetToggleAttribute = 'open-nav';\n    topbarMqlChangeEventName = 'toujou-topbar-breakpoint-change';\n\n    /**\n     * When the state changes we need to update the UI attributes on the relevant elements\n     * @param value\n     */\n    // @ts-ignore\n    set state(value: boolean): void {\n        this._state = value;\n        this.setAttribute('aria-pressed', String(value));\n        this.setAttribute('aria-expanded', String(value));\n    }\n    \n    // @ts-ignore\n    get state() {\n        return this._state;\n    }\n\n    render() {\n        return html`<slot name=\"content\"></slot>`\n    }\n\n    /**\n     * Add event listeners\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        this.addEventListener('click', this._handleClickEvent.bind(this));\n        window.addEventListener(this.topbarMqlChangeEventName, this._handleMqlChange.bind(this));\n    }\n\n    /**\n     * Remove event listeners\n     */\n    disconnectedCallback() {\n        super.disconnectedCallback();\n\n        this.removeEventListener('click', this._handleClickEvent.bind(this));\n        window.removeEventListener(this.topbarMqlChangeEventName, this._handleMqlChange.bind(this));\n    }\n\n    /**\n     * When the button is clicked: update the state, dispatch custom event\n     */\n    _handleClickEvent() {\n        this.state = !this._state;\n\n        this.dispatchEvent(new CustomEvent(this.clickEventName, {\n            bubbles: true,\n            composed: true,\n            detail: { state: this.state }\n        }));\n    }\n\n    /**\n     * Close the button when the window grows to desktop width\n     * @param event\n     */\n    _handleMqlChange(event: Event) {\n        if (!(<CustomEvent>event).detail.state) {\n            this.state = false;\n        }\n    }\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'toujou-burger-button': ToujouBurgerButton\n    }\n}\n"],"names":["ToujouBurgerButton","LitElement","value","html","event","__decorateClass","property","customElement"],"mappings":"+XAOa,IAAAA,EAAN,cAAiCC,CAAW,CAA5C,aAAA,CAAA,MAAA,GAAA,SAAA,EAKe,KAAA,OAAA,GAGD,KAAA,eAAA,6BACO,KAAA,sBAAA,WACG,KAAA,yBAAA,iCAAA,CAO3B,IAAI,MAAMC,EAAsB,CAC5B,KAAK,OAASA,EACd,KAAK,aAAa,eAAgB,OAAOA,CAAK,CAAC,EAC/C,KAAK,aAAa,gBAAiB,OAAOA,CAAK,CAAC,CACpD,CAGA,IAAI,OAAQ,CACR,OAAO,KAAK,MAChB,CAEA,QAAS,CACE,OAAAC,+BACX,CAKA,mBAAoB,CAChB,MAAM,kBAAkB,EACxB,KAAK,iBAAiB,QAAS,KAAK,kBAAkB,KAAK,IAAI,CAAC,EAChE,OAAO,iBAAiB,KAAK,yBAA0B,KAAK,iBAAiB,KAAK,IAAI,CAAC,CAC3F,CAKA,sBAAuB,CACnB,MAAM,qBAAqB,EAE3B,KAAK,oBAAoB,QAAS,KAAK,kBAAkB,KAAK,IAAI,CAAC,EACnE,OAAO,oBAAoB,KAAK,yBAA0B,KAAK,iBAAiB,KAAK,IAAI,CAAC,CAC9F,CAKA,mBAAoB,CACX,KAAA,MAAQ,CAAC,KAAK,OAEnB,KAAK,cAAc,IAAI,YAAY,KAAK,eAAgB,CACpD,QAAS,GACT,SAAU,GACV,OAAQ,CAAE,MAAO,KAAK,KAAM,CAC/B,CAAA,CAAC,CACN,CAMA,iBAAiBC,EAAc,CACRA,EAAO,OAAO,QAC7B,KAAK,MAAQ,GAErB,CACJ,EApEIC,EAAA,CADCC,EAAS,CAAE,KAAM,QAAS,CAAA,EAJlBN,EAKT,UAAA,SAAA,CAAA,EALSA,EAANK,EAAA,CADNE,EAAc,sBAAsB,CAAA,EACxBP,CAAA"}