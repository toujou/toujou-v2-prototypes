{"version":3,"file":"toujou-media-info.js","sources":["../../src/components/toujou-media-info/toujou-media-info.styles.ts","../../src/components/toujou-media-info/toujou-media-info.ts"],"sourcesContent":["import { css } from 'lit';\n\nexport const ToujouMediaInfoStyles = css`\n  .open-button {\n    display: flex;\n  }\n  \n  :host([open]) .open-button {\n    display: none;\n  }\n\n  .close-button {\n    display: none;\n  }\n\n  :host([open]) .close-button {\n    display: flex;\n  }\n`;","import { LitElement, html, PropertyValues } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { ToujouMediaInfoStyles } from \"./toujou-media-info.styles\";\n\n@customElement('toujou-media-info')\nexport class ToujouMediaInfo extends LitElement {\n    @property({ type: Boolean, reflect: true, attribute: 'open' })\n    isOpen: boolean = false;\n\n    private readonly isOpenParentAttribute = 'media-info-child-is-open';\n\n    static styles = [ToujouMediaInfoStyles];\n\n    render() {\n        return html`\n            <slot name=\"open-button\" class=\"open-button\"></slot>\n            <slot name=\"close-button\" class=\"close-button\"></slot>\n            <slot name=\"figcaption\"></slot>\n            <slot name=\"copyright\"></slot>\n        `\n    }\n\n    constructor() {\n        super();\n\n        this.addEventListener('click', this._handleClick);\n    }\n\n    updated(changed: PropertyValues<this>) {\n        if (changed.has('isOpen')) {\n            this.isOpen\n                ? this.parentElement?.setAttribute(this.isOpenParentAttribute, '')\n                : this.parentElement?.removeAttribute(this.isOpenParentAttribute);\n        }\n    }\n\n    /**\n     * Handle click on whole element to prevent click on element behind when open\n     * @param event\n     */\n    _handleClick = (event: any): void => {\n        event.preventDefault();\n        event.stopPropagation();\n        const clickedTarget = event.target as HTMLElement;\n\n        if (clickedTarget.closest('[slot=\"open-button\"], [slot=\"close-button\"]')) {\n            this._toggleIsOpen();\n        }\n    }\n\n    /**\n     * Toggle to \"isOpen\" property, which also reflects as an attribute on the element\n     * @private\n     */\n    private _toggleIsOpen(): void {\n        this.isOpen = !this.isOpen;\n    }\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'toujou-media-info': ToujouMediaInfo\n    }\n}\n"],"names":["ToujouMediaInfoStyles","css","ToujouMediaInfo","LitElement","event","html","changed","_a","_b","__decorateClass","property","customElement"],"mappings":"sMAEO,MAAMA,EAAwBC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,kMCGxB,IAAAC,EAAN,cAA8BC,CAAW,CAiB5C,aAAc,CACJ,QAhBQ,KAAA,OAAA,GAElB,KAAiB,sBAAwB,2BA+BzC,KAAA,aAAgBC,GAAqB,CACjCA,EAAM,eAAe,EACrBA,EAAM,gBAAgB,EACAA,EAAM,OAEV,QAAQ,6CAA6C,GACnE,KAAK,cAAc,CACvB,EAtBK,KAAA,iBAAiB,QAAS,KAAK,YAAY,CACpD,CAbA,QAAS,CACE,OAAAC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,SAMX,CAQA,QAAQC,EAA+B,SAC/BA,EAAQ,IAAI,QAAQ,IACpB,KAAK,QACCC,EAAA,KAAK,gBAAL,MAAAA,EAAoB,aAAa,KAAK,sBAAuB,KAC7DC,EAAA,KAAK,gBAAL,MAAAA,EAAoB,gBAAgB,KAAK,uBAEvD,CAoBQ,eAAsB,CACrB,KAAA,OAAS,CAAC,KAAK,MACxB,CACJ,EApDaN,EAMF,OAAS,CAACF,CAAqB,EAJtCS,EAAA,CADCC,EAAS,CAAE,KAAM,QAAS,QAAS,GAAM,UAAW,OAAQ,CAAA,EADpDR,EAET,UAAA,SAAA,CAAA,EAFSA,EAANO,EAAA,CADNE,EAAc,mBAAmB,CAAA,EACrBT,CAAA"}