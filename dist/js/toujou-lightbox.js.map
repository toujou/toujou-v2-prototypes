{"version":3,"file":"toujou-lightbox.js","sources":["../../src/components/toujou-photoswipe-lightbox/toujou-photoswipe-lightbox.ts"],"sourcesContent":["import { LitElement, PropertyValues } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport PhotoSwipe from 'photoswipe';\n// @ts-ignore\nimport PhotoSwipeLightbox from 'photoswipe/lightbox';\n// @ts-ignore\nimport PhotoSwipeVideoPlugin from 'photoswipe-video-plugin';\n\n@customElement('toujou-photoswipe-lightbox')\nexport class ToujouPhotoswipeLightbox extends LitElement {\n    @property({ type: Array })\n    lightboxItems: HTMLElement[] = [];\n\n    @property({ type: Set })\n    lightboxParents = new Set<HTMLElement>();\n\n    @property({ type: Set })\n    lightboxes = new Set<PhotoSwipeLightbox>();\n\n    private readonly parentIdAttribute = 'lightbox-parent-id';\n\n    protected createRenderRoot(): Element | ShadowRoot {\n        return this;\n    }\n\n    updated(changed: PropertyValues<this>) {\n        if (changed.has('lightboxItems')) {\n            this._handleLightboxItemsChange();\n        }\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n\n        this.lightboxItems = Array.from(document.querySelectorAll('.lightbox-item'));\n    }\n\n    /**\n     * Register a new UI element: caption\n     * @param {PhotoSwipeLightbox} lightbox\n     */\n    _handleUiRegister = (lightbox: PhotoSwipeLightbox) => {\n        lightbox.pswp.ui.registerElement({\n            name: 'caption',\n            order: 9,\n            isButton: false,\n            appendTo: 'root',\n            onInit: (el: HTMLElement) => {\n                lightbox.pswp.on('change', () => this._handleChange(el, lightbox));\n            },\n        });\n    }\n\n    /**\n     * React to change on the lightbox so that we can add the correct caption text\n     * @param {HTMLElement} el\n     * @param {PhotoSwipeLightbox} lightbox\n     */\n    _handleChange = (el: HTMLElement, lightbox: PhotoSwipeLightbox) => {\n        let captionText = '';\n        const currSlideElement = lightbox.pswp.currSlide.data.element;\n\n        if (currSlideElement) {\n            captionText = currSlideElement.getAttribute('title');\n        }\n\n        el.textContent = captionText ? captionText : '';\n    }\n\n    /**\n     * Set the lightboxParents elements according to the lightboxItems found\n     */\n    _handleLightboxItemsChange = () => {\n        this.lightboxItems.forEach((item) => {\n            const itemLightboxParent = item.closest(`[${this.parentIdAttribute}]`) as HTMLElement;\n            this.lightboxParents.add(itemLightboxParent);\n        });\n\n        this._handleLightboxParentsChange();\n    }\n\n    /**\n     * Initialize a lightbox element for each of the lightbox parents\n     */\n    _handleLightboxParentsChange = () => {\n        this.lightboxParents.forEach((lightboxParent) => {\n            this._initLightbox(lightboxParent);\n        })\n    }\n\n    /**\n     * Initialize  single instance of a PhotoSwipe lightbox and save it to the lightboxParents set\n     * @param {HTMLElement} lightboxParent\n     */\n    _initLightbox = (lightboxParent: HTMLElement) => {\n        const lightbox: PhotoSwipeLightbox = new PhotoSwipeLightbox({\n            gallery: lightboxParent,\n            children: '[lightbox-item-id]',\n            pswpModule: PhotoSwipe,\n            allowPanToNext: true,\n            preloaderDelay: 0,\n        })\n\n        lightbox.on('uiRegister', () => this._handleUiRegister(lightbox));\n\n        lightbox.videoPlugin = new PhotoSwipeVideoPlugin(lightbox, {\n            autoplay: false\n        });\n\n        lightbox.init();\n\n        this.lightboxes.add(lightbox);\n    }\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'toujou-photoswipe-lightbox': ToujouPhotoswipeLightbox\n    }\n}\n"],"names":["ToujouPhotoswipeLightbox","LitElement","lightbox","el","captionText","currSlideElement","item","itemLightboxParent","lightboxParent","PhotoSwipeLightbox","PhotoSwipe","PhotoSwipeVideoPlugin","changed","__decorateClass","property","customElement"],"mappings":"8aASa,IAAAA,EAAN,cAAuCC,CAAW,CAAlD,aAAA,CAAA,MAAA,GAAA,SAAA,EAEH,KAAA,cAA+B,GAG/B,KAAA,oBAAsB,IAGtB,KAAA,eAAiB,IAEjB,KAAiB,kBAAoB,qBAsBrC,KAAA,kBAAqBC,GAAiC,CACzCA,EAAA,KAAK,GAAG,gBAAgB,CAC7B,KAAM,UACN,MAAO,EACP,SAAU,GACV,SAAU,OACV,OAASC,GAAoB,CAChBD,EAAA,KAAK,GAAG,SAAU,IAAM,KAAK,cAAcC,EAAID,CAAQ,CAAC,CACrE,CAAA,CACH,CAAA,EAQW,KAAA,cAAA,CAACC,EAAiBD,IAAiC,CAC/D,IAAIE,EAAc,GAClB,MAAMC,EAAmBH,EAAS,KAAK,UAAU,KAAK,QAElDG,IACcD,EAAAC,EAAiB,aAAa,OAAO,GAGpDF,EAAA,YAAcC,GAA4B,EAAA,EAMjD,KAAA,2BAA6B,IAAM,CAC1B,KAAA,cAAc,QAASE,GAAS,CACjC,MAAMC,EAAqBD,EAAK,QAAQ,IAAI,KAAK,oBAAoB,EAChE,KAAA,gBAAgB,IAAIC,CAAkB,CAAA,CAC9C,EAED,KAAK,6BAA6B,CAAA,EAMtC,KAAA,6BAA+B,IAAM,CAC5B,KAAA,gBAAgB,QAASC,GAAmB,CAC7C,KAAK,cAAcA,CAAc,CAAA,CACpC,CAAA,EAOL,KAAA,cAAiBA,GAAgC,CACvC,MAAAN,EAA+B,IAAIO,EAAmB,CACxD,QAASD,EACT,SAAU,qBACV,WAAYE,EACZ,eAAgB,GAChB,eAAgB,CAAA,CACnB,EAEDR,EAAS,GAAG,aAAc,IAAM,KAAK,kBAAkBA,CAAQ,CAAC,EAEvDA,EAAA,YAAc,IAAIS,EAAsBT,EAAU,CACvD,SAAU,EAAA,CACb,EAEDA,EAAS,KAAK,EAET,KAAA,WAAW,IAAIA,CAAQ,CAAA,CAChC,CA3FU,kBAAyC,CACxC,OAAA,IACX,CAEA,QAAQU,EAA+B,CAC/BA,EAAQ,IAAI,eAAe,GAC3B,KAAK,2BAA2B,CAExC,CAEA,mBAAoB,CAChB,MAAM,kBAAkB,EAExB,KAAK,cAAgB,MAAM,KAAK,SAAS,iBAAiB,gBAAgB,CAAC,CAC/E,CA8EJ,EAtGIC,EAAA,CADCC,EAAS,CAAE,KAAM,MAAO,CAAA,EADhBd,EAET,UAAA,gBAAA,CAAA,EAGAa,EAAA,CADCC,EAAS,CAAE,KAAM,IAAK,CAAA,EAJdd,EAKT,UAAA,kBAAA,CAAA,EAGAa,EAAA,CADCC,EAAS,CAAE,KAAM,IAAK,CAAA,EAPdd,EAQT,UAAA,aAAA,CAAA,EARSA,EAANa,EAAA,CADNE,EAAc,4BAA4B,CAAA,EAC9Bf,CAAA"}