{"version":3,"file":"toujou-topbutton.js","sources":["../../src/components/toujou-topbutton/toujou-topbutton.ts"],"sourcesContent":["import { html, LitElement, PropertyValues } from 'lit';\nimport { property } from 'lit/decorators.js';\n\nclass ToujouTopbutton extends LitElement {\n    @property({ type: Boolean, attribute: \"is-visible\", reflect: true })\n    private visible: boolean = false;\n\n    static get is() {\n        return 'toujou-topbutton';\n    }\n\n    constructor() {\n        super();\n\n        this._checkVisibility = this._checkVisibility.bind(this);\n    }\n\n    render() {\n        return html`\n            <slot id=\"content\"></slot>\n        `;\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n\n        this.setAttribute('role', 'button');\n        this._checkVisibility();\n\n        window.addEventListener('scroll', this._checkVisibility);\n        window.addEventListener('resize', this._checkVisibility);\n        this.addEventListener('click', this._handleClick);\n    }\n\n    disconnectedCallback() {\n        window.removeEventListener('scroll', this._checkVisibility);\n        window.addEventListener('resize', this._checkVisibility);\n        this.removeEventListener('click', this._handleClick);\n\n        super.disconnectedCallback();\n    }\n\n    updated(changedProperties: PropertyValues) {\n        super.updated(changedProperties);\n        if (changedProperties.has('visible')) {\n            this.setAttribute('aria-hidden', (!this.visible).toString());\n        }\n    }\n\n    /**\n     * Get the viewport height\n     */\n    get _viewportHeight(): number {\n        return Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    }\n\n    /**\n     * Check if the button is visible according to the amount scrolled and the viewport height\n     */\n    _checkVisibility = (): void => {\n        this.visible = document.body.scrollTop > this._viewportHeight || document.documentElement.scrollTop > this._viewportHeight;\n    }\n\n    /**\n     * When the button is clicked we scroll to the top of the page and set focus on the 1st element on the page\n     */\n    _handleClick(): void {\n        window.scrollTo({\n            top: 0,\n            left: 0,\n            behavior: 'smooth',\n        });\n        this._resetFocus()\n    }\n\n    /**\n     * Reset focus / return focus to start of the page\n     */\n    _resetFocus() {\n        const focusedElement = document.activeElement as HTMLElement;\n        if (!focusedElement) return;\n        focusedElement.blur();\n    }\n}\n\ncustomElements.define(ToujouTopbutton.is, ToujouTopbutton);\n"],"names":["ToujouTopbutton","LitElement","html","changedProperties","focusedElement","__decorateClass","property"],"mappings":"8UAGA,MAAMA,UAAwBC,CAAW,CAQrC,aAAc,CACJ,QAPV,KAAQ,QAAmB,GAsD3B,KAAA,iBAAmB,IAAY,CACtB,KAAA,QAAU,SAAS,KAAK,UAAY,KAAK,iBAAmB,SAAS,gBAAgB,UAAY,KAAK,eAAA,EA9C3G,KAAK,iBAAmB,KAAK,iBAAiB,KAAK,IAAI,CAC3D,CARA,WAAW,IAAK,CACL,MAAA,kBACX,CAQA,QAAS,CACE,OAAAC;AAAAA;AAAAA,SAGX,CAEA,mBAAoB,CAChB,MAAM,kBAAkB,EAEnB,KAAA,aAAa,OAAQ,QAAQ,EAClC,KAAK,iBAAiB,EAEf,OAAA,iBAAiB,SAAU,KAAK,gBAAgB,EAChD,OAAA,iBAAiB,SAAU,KAAK,gBAAgB,EAClD,KAAA,iBAAiB,QAAS,KAAK,YAAY,CACpD,CAEA,sBAAuB,CACZ,OAAA,oBAAoB,SAAU,KAAK,gBAAgB,EACnD,OAAA,iBAAiB,SAAU,KAAK,gBAAgB,EAClD,KAAA,oBAAoB,QAAS,KAAK,YAAY,EAEnD,MAAM,qBAAqB,CAC/B,CAEA,QAAQC,EAAmC,CACvC,MAAM,QAAQA,CAAiB,EAC3BA,EAAkB,IAAI,SAAS,GAC/B,KAAK,aAAa,eAAgB,CAAC,KAAK,SAAS,UAAU,CAEnE,CAKA,IAAI,iBAA0B,CAC1B,OAAO,KAAK,IAAI,SAAS,gBAAgB,aAAc,OAAO,aAAe,CAAC,CAClF,CAYA,cAAqB,CACjB,OAAO,SAAS,CACZ,IAAK,EACL,KAAM,EACN,SAAU,QAAA,CACb,EACD,KAAK,YAAY,CACrB,CAKA,aAAc,CACV,MAAMC,EAAiB,SAAS,cAC3BA,GACLA,EAAe,KAAK,CACxB,CACJ,CA9EYC,EAAA,CADPC,EAAS,CAAE,KAAM,QAAS,UAAW,aAAc,QAAS,GAAM,CAAA,EADjEN,EAEM,UAAA,UAAA,CAAA,EAgFZ,eAAe,OAAOA,EAAgB,GAAIA,CAAe"}