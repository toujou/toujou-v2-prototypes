var e=(t=>(t.PRIMARY="primary",t.SECONDARY="secondary",t.FONT="font",t))(e||{}),i=(t=>(t.DEFAULT="default",t.BORDER="border",t.GHOST="ghost",t))(i||{}),s=(t=>(t.TINY="tiny",t.SMALL="small",t.NORMAL="normal",t.LARGE="large",t))(s||{});class l extends HTMLButtonElement{constructor(){super(),this.defaultButtonVariant=e.PRIMARY,this.defaultButtonType=i.DEFAULT,this.defaultButtonSize=s.NORMAL}connectedCallback(){this._checkRequiredAttributes()}_checkRequiredAttributes(){const n=this.getAttribute("button-variant");n?Object.values(e).includes(n)||(console.warn(`TOUJOU: Invalid button-variant value, falling back to default: "${this.defaultButtonVariant}"`),this.setAttribute("button-variant",this.defaultButtonVariant)):this.setAttribute("button-variant",this.defaultButtonVariant);const a=this.getAttribute("button-size");a?Object.values(s).includes(a)||(console.warn(`TOUJOU: Invalid button-size value, falling back to default: "${this.defaultButtonSize}"`),this.setAttribute("button-size",this.defaultButtonSize)):this.setAttribute("button-size",this.defaultButtonSize);const u=this.getAttribute("button-type");u?Object.values(i).includes(u)||(console.warn(`TOUJOU: Invalid button-type value, falling back to default: "${this.defaultButtonType}"`),this.setAttribute("button-size",this.defaultButtonType)):this.setAttribute("button-type",this.defaultButtonType)}}customElements.define("toujou-button",l,{extends:"button"});
