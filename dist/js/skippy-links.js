class t extends HTMLElement{constructor(){super(),this._targets=[],this._shadow=this.attachShadow({mode:"open"}),this._skippyLinksLabelAttributeName="skippy-links-label",this._emptyAttribute="empty",this._shadow.innerHTML="\n    <style>        \n        :host {\n            --sl-color-primary: #0000ee;\n            --sl-element-height: 4rem;\n            \n            border: 1px solid var(--sl-color-primary);\n            background-color: white;\n            position: fixed;\n            top: calc(var(--sl-element-height) * -1);\n            bottom: unset;\n            left: 0;\n            right: 0;\n            width: 100%;\n            height: var(--sl-element-height);\n            transform: translateY(0);\n            transition: transform var(--sl-transition-speed, .25s) ease-in-out;\n            overflow: hidden;\n            box-sizing: border-box;\n            box-shadow: none;\n            z-index: 9999;\n        }\n        \n        :host(:focus-within) {\n            transform: translateY(100%);\n        }\n        \n        .skippy-links__link {\n            position: var(--sl-link-position, absolute);\n            top: var(--sl-link-top, 0);\n            bottom: var(--sl-link-bottom, 0);\n            left: var(--sl-link-left, 0);\n            right: var(--sl-link-right, 0);\n            width: var(--sl-link-width, 100%);\n            height: var(--sl-link-height, var(--sl-element-height));\n            display: var(--sl-link-display, flex);\n            align-items: var(--sl-link-align-items, center);\n            justify-content: var(--sl-link-justify-content, center);\n            color: var(--sl-link-color, var(--sl-color-primary));\n            font-size: var(--sl-link-font-size, 1rem);\n            text-decoration: var(--sl-link-text-decoration, underline);\n            padding: var(--sl-link-padding, 1rem);\n            opacity: var(--sl-link-opacity, 1);\n            transform: var(--sl-link-transform, translateY(-100%));\n            box-sizing: var(--sl-link-box-sizing, border-box);\n        }\n        \n        .skippy-links__link:focus {\n            opacity: var(--sl-link-opacity-focus, 1);\n            transform: var(--sl-link-transform-focus, translateY(0));\n            color: var(--sl-link-color-focus, var(--sl-color-primary));\n        }\n        \n        @media (hover: hover) {\n            .skippy-links__link:hover {\n                opacity: var(--sl-link-opacity-hover, 1);\n                transform: var(--sl-link-transform-hover, translateY(0));\n                color: var(--sl-link-color-hover, var(--sl-color-primary));\n            }\n        }\n        \n        @media (prefers-reduced-motion) {\n          :root {\n            --sl-transition-speed: var(--sl-transition-speed-reduced-motion, 0));\n          }\n        }\n    </style>\n"}connectedCallback(){"complete"===document.readyState||"loading"!==document.readyState?this._init():document.addEventListener("DOMContentLoaded",this._init)}_init(){document.querySelectorAll(`[${this._skippyLinksLabelAttributeName}]`).forEach((t=>{const n=t.id||null,e=t.getAttribute(this._skippyLinksLabelAttributeName)||null;n&&e?this._targets.push(this._createNewTarget(t,n,e)):console.error("SKIPPY-LINKS: target element does not have all required attributes (id and skippy-link-label)")})),this._targets&&this._targets.length?(this.setAttribute("role","navigation"),this._populate()):this.setAttribute(this._emptyAttribute,"")}_createNewTarget(t,n,e){return{element:t,id:n,label:e}}_populate(){this._targets.forEach((t=>{const n=document.createElement("a");n.href=`#${t.id}`,n.textContent=t.label,n.classList.add("skippy-links__link"),n.addEventListener("keydown",(n=>{"Space"!==n.code&&"enter"!==n.code||this._handleClick(t.element)})),n.addEventListener("click",(()=>{this._handleClick(t.element)})),this._shadow.appendChild(n)}))}_handleClick(t){this.blur(),t.focus()}}window.customElements.define("skippy-links",t);
//# sourceMappingURL=skippy-links.js.map
