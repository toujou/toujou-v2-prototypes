{"version":3,"file":"skippy-links-09583853.js","sources":["../../node_modules/skippy-links/dist/skippy-links.styles.js","../../node_modules/skippy-links/dist/SkippyLinks.js","../../node_modules/skippy-links/dist/skippy-links.js"],"sourcesContent":["export const skippyLinksStyles = `\n    <style>        \n        :host {\n            --sl-color-primary: #0000ee;\n            --sl-element-height: 4rem;\n            \n            border: 1px solid var(--sl-color-primary);\n            background-color: white;\n            position: fixed;\n            top: calc(var(--sl-element-height) * -1);\n            bottom: unset;\n            left: 0;\n            right: 0;\n            width: 100%;\n            height: var(--sl-element-height);\n            transform: translateY(0);\n            transition: transform var(--sl-transition-speed, .25s) ease-in-out;\n            overflow: hidden;\n            box-sizing: border-box;\n            box-shadow: none;\n            z-index: 9999;\n        }\n        \n        :host(:focus-within) {\n            transform: translateY(100%);\n        }\n        \n        .skippy-links__link {\n            position: var(--sl-link-position, absolute);\n            top: var(--sl-link-top, 0);\n            bottom: var(--sl-link-bottom, 0);\n            left: var(--sl-link-left, 0);\n            right: var(--sl-link-right, 0);\n            width: var(--sl-link-width, 100%);\n            height: var(--sl-link-height, var(--sl-element-height));\n            display: var(--sl-link-display, flex);\n            align-items: var(--sl-link-align-items, center);\n            justify-content: var(--sl-link-justify-content, center);\n            color: var(--sl-link-color, var(--sl-color-primary));\n            font-size: var(--sl-link-font-size, 1rem);\n            text-decoration: var(--sl-link-text-decoration, underline);\n            padding: var(--sl-link-padding, 1rem);\n            opacity: var(--sl-link-opacity, 1);\n            transform: var(--sl-link-transform, translateY(-100%));\n            box-sizing: var(--sl-link-box-sizing, border-box);\n        }\n        \n        .skippy-links__link:focus {\n            opacity: var(--sl-link-opacity-focus, 1);\n            transform: var(--sl-link-transform-focus, translateY(0));\n            color: var(--sl-link-color-focus, var(--sl-color-primary));\n        }\n        \n        @media (hover: hover) {\n            .skippy-links__link:hover {\n                opacity: var(--sl-link-opacity-hover, 1);\n                transform: var(--sl-link-transform-hover, translateY(0));\n                color: var(--sl-link-color-hover, var(--sl-color-primary));\n            }\n        }\n        \n        @media (prefers-reduced-motion) {\n          :root {\n            --sl-transition-speed: var(--sl-transition-speed-reduced-motion, 0));\n          }\n        }\n    </style>\n`;\n//# sourceMappingURL=skippy-links.styles.js.map","import { skippyLinksStyles } from './skippy-links.styles.js';\nexport class SkippyLinks extends HTMLElement {\n    constructor() {\n        super();\n        this._targets = [];\n        this._shadow = this.attachShadow({ mode: 'open' });\n        this._skippyLinksLabelAttributeName = 'skippy-links-label';\n        this._emptyAttribute = 'empty';\n        this._shadow.innerHTML = skippyLinksStyles;\n    }\n    connectedCallback() {\n        if (document.readyState === 'complete' ||\n            document.readyState !== 'loading') {\n            this._init();\n        }\n        else {\n            document.addEventListener('DOMContentLoaded', this._init);\n        }\n    }\n    _init() {\n        const possibleTargets = document.querySelectorAll(`[${this._skippyLinksLabelAttributeName}]`);\n        possibleTargets.forEach(possibleTarget => {\n            const targetId = possibleTarget.id || null;\n            const targetLabel = possibleTarget.getAttribute(this._skippyLinksLabelAttributeName) ||\n                null;\n            if (!targetId || !targetLabel) {\n                console.error('SKIPPY-LINKS: target element does not have all required attributes (id and skippy-link-label)');\n            }\n            else {\n                this._targets.push(this._createNewTarget(possibleTarget, targetId, targetLabel));\n            }\n        });\n        if (!this._targets || !this._targets.length) {\n            this.setAttribute(this._emptyAttribute, '');\n            return;\n        }\n        this.setAttribute('role', 'navigation');\n        this._populate();\n    }\n    /**\n     * Create a new Target object with all relevant properties\n     *\n     * @param {HTMLElement} possibleTarget\n     * @param {string} targetId\n     * @param {string} targetLabel\n     * @returns {Target} Target\n     */\n    _createNewTarget(possibleTarget, targetId, targetLabel) {\n        return {\n            element: possibleTarget,\n            id: targetId,\n            label: targetLabel,\n        };\n    }\n    /**\n     * Populate the component with links to the page's targets\n     */\n    _populate() {\n        this._targets.forEach(target => {\n            const targetLink = document.createElement('a');\n            targetLink.href = `#${target.id}`;\n            targetLink.textContent = target.label;\n            targetLink.classList.add('skippy-links__link');\n            targetLink.addEventListener('keydown', event => {\n                if (event.code === 'Space' || event.code === 'enter') {\n                    this._handleClick(target.element);\n                }\n            });\n            targetLink.addEventListener('click', () => {\n                this._handleClick(target.element);\n            });\n            this._shadow.appendChild(targetLink);\n        });\n    }\n    /**\n     * handle focus when one of the links is clicked\n     *\n     * @param {HTMLElement} targetElement\n     */\n    _handleClick(targetElement) {\n        this.blur();\n        targetElement.focus();\n    }\n}\n//# sourceMappingURL=SkippyLinks.js.map","import { SkippyLinks } from './SkippyLinks.js';\nwindow.customElements.define('skippy-links', SkippyLinks);\n//# sourceMappingURL=skippy-links.js.map"],"names":["skippyLinksStyles","SkippyLinks","possibleTarget","targetId","targetLabel","target","targetLink","event","targetElement"],"mappings":"AAAO,MAAMA,EAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECC1B,MAAMC,UAAoB,WAAY,CACzC,aAAc,CACV,QACA,KAAK,SAAW,GAChB,KAAK,QAAU,KAAK,aAAa,CAAE,KAAM,MAAM,CAAE,EACjD,KAAK,+BAAiC,qBACtC,KAAK,gBAAkB,QACvB,KAAK,QAAQ,UAAYD,CAC5B,CACD,mBAAoB,CACZ,SAAS,aAAe,YACxB,SAAS,aAAe,UACxB,KAAK,MAAK,EAGV,SAAS,iBAAiB,mBAAoB,KAAK,KAAK,CAE/D,CACD,OAAQ,CAaJ,GAZwB,SAAS,iBAAiB,IAAI,KAAK,iCAAiC,EAC5E,QAAQE,GAAkB,CACtC,MAAMC,EAAWD,EAAe,IAAM,KAChCE,EAAcF,EAAe,aAAa,KAAK,8BAA8B,GAC/E,KACA,CAACC,GAAY,CAACC,EACd,QAAQ,MAAM,+FAA+F,EAG7G,KAAK,SAAS,KAAK,KAAK,iBAAiBF,EAAgBC,EAAUC,CAAW,CAAC,CAE/F,CAAS,EACG,CAAC,KAAK,UAAY,CAAC,KAAK,SAAS,OAAQ,CACzC,KAAK,aAAa,KAAK,gBAAiB,EAAE,EAC1C,MACH,CACD,KAAK,aAAa,OAAQ,YAAY,EACtC,KAAK,UAAS,CACjB,CASD,iBAAiBF,EAAgBC,EAAUC,EAAa,CACpD,MAAO,CACH,QAASF,EACT,GAAIC,EACJ,MAAOC,CACnB,CACK,CAID,WAAY,CACR,KAAK,SAAS,QAAQC,GAAU,CAC5B,MAAMC,EAAa,SAAS,cAAc,GAAG,EAC7CA,EAAW,KAAO,IAAID,EAAO,KAC7BC,EAAW,YAAcD,EAAO,MAChCC,EAAW,UAAU,IAAI,oBAAoB,EAC7CA,EAAW,iBAAiB,UAAWC,GAAS,EACxCA,EAAM,OAAS,SAAWA,EAAM,OAAS,UACzC,KAAK,aAAaF,EAAO,OAAO,CAEpD,CAAa,EACDC,EAAW,iBAAiB,QAAS,IAAM,CACvC,KAAK,aAAaD,EAAO,OAAO,CAChD,CAAa,EACD,KAAK,QAAQ,YAAYC,CAAU,CAC/C,CAAS,CACJ,CAMD,aAAaE,EAAe,CACxB,KAAK,KAAI,EACTA,EAAc,MAAK,CACtB,CACL,CClFA,OAAO,eAAe,OAAO,eAAgBP,CAAW"}