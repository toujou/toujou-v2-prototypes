{"version":3,"file":"toujou-topbar.js","sources":["../../../src/components/toujou-topbar/toujou-topbar.ts"],"sourcesContent":["import { LitElement } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\n\n/**\n * Topbar element\n */\n@customElement('toujou-topbar')\nexport class ToujouTopbar extends LitElement {\n    // Constants\n    burgerButtonClickEvent = 'toujou-burger-button-click';\n    mqlChangeEventName = 'toujou-topbar-breakpoint-change';\n\n    @property({ type: Boolean, reflect: true, attribute: 'open-nav' })\n    _isOpen: boolean = false;\n\n    @property({ type: MediaQueryList })\n    _mql: MediaQueryList = window.matchMedia(\"(max-width: 839px)\");\n\n    @property({ type: Boolean, })\n    _isMobile: boolean = this._mql.matches;\n\n    protected createRenderRoot(): Element | ShadowRoot {\n        return this;\n    }\n\n    /**\n     * Add event listeners\n     */\n    connectedCallback() {\n        super.connectedCallback();\n\n        window.addEventListener(this.burgerButtonClickEvent, this._handleBurgerButtonClick.bind(this));\n        this._mql.addEventListener('change', this._handleMqlChange.bind(this));\n    }\n\n    /**\n     * Remove event listeners\n     */\n    disconnectedCallback() {\n        super.disconnectedCallback();\n\n        window.removeEventListener(this.burgerButtonClickEvent, this._handleBurgerButtonClick.bind(this));\n        this._mql.removeEventListener('change', this._handleMqlChange.bind(this));\n    }\n\n    /**\n     * Set correct isOpen value according to state of burger button click event\n     * @param event\n     */\n    _handleBurgerButtonClick(event: Event) {\n        this._isOpen = (<CustomEvent>event).detail.state;\n    }\n\n    /**\n     * When the window grows to desktop width:\n     *  - dispatch a \"media query change\" event that other elements (burger and navigation) can reacto to\n     *  - set the internal isOpen state to false\n     * @param event\n     */\n    _handleMqlChange(event: MediaQueryListEvent) {\n        const isMobile = event.matches;\n        this.dispatchEvent(new CustomEvent(this.mqlChangeEventName, {\n            bubbles: true,\n            composed: true,\n            detail: { state: isMobile }\n        }));\n\n        if (!isMobile) {\n            this._isOpen = false;\n        }\n    }\n}\n\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'toujou-topbar': ToujouTopbar\n    }\n}\n"],"names":["LitElement","property","customElement"],"mappings":"mVAOO,GAAA,GAAA,aAA2BA,EAAW,CAAtC,aAAA,CAAA,MAAA,GAAA,SAAA,EAEsB,KAAA,uBAAA,6BACJ,KAAA,mBAAA,kCAGF,KAAA,QAAA,GAGI,KAAA,KAAA,OAAO,WAAW,oBAAoB,EAG7D,KAAA,UAAqB,KAAK,KAAK,OAAA,CAErB,kBAAyC,CACxC,MAAA,KACX,CAKA,mBAAoB,CAChB,MAAM,kBAAkB,EAExB,OAAO,iBAAiB,KAAK,uBAAwB,KAAK,yBAAyB,KAAK,IAAI,CAAC,EAC7F,KAAK,KAAK,iBAAiB,SAAU,KAAK,iBAAiB,KAAK,IAAI,CAAC,CACzE,CAKA,sBAAuB,CACnB,MAAM,qBAAqB,EAE3B,OAAO,oBAAoB,KAAK,uBAAwB,KAAK,yBAAyB,KAAK,IAAI,CAAC,EAChG,KAAK,KAAK,oBAAoB,SAAU,KAAK,iBAAiB,KAAK,IAAI,CAAC,CAC5E,CAMA,yBAAyB,EAAc,CAC9B,KAAA,QAAwB,EAAO,OAAO,KAC/C,CAQA,iBAAiB,EAA4B,CACzC,KAAM,GAAW,EAAM,QACvB,KAAK,cAAc,GAAI,aAAY,KAAK,mBAAoB,CACxD,QAAS,GACT,SAAU,GACV,OAAQ,CAAE,MAAO,CAAS,CAC7B,CAAA,CAAC,EAEG,GACD,MAAK,QAAU,GAEvB,CACJ,EA1DI,EAAA,CADCC,EAAS,CAAE,KAAM,QAAS,QAAS,GAAM,UAAW,WAAY,CAAA,EACjE,EAAA,UAAA,UAAA,CAAA,EAGA,EAAA,CADAA,EAAU,CAAE,KAAM,eAAgB,CAAA,EAClC,EAAA,UAAA,OAAA,CAAA,EAGA,EAAA,CADAA,EAAU,CAAE,KAAM,QAAU,CAAA,EAC5B,EAAA,UAAA,YAAA,CAAA,EAZG,EAAA,EAAA,CADNC,EAAc,eAAe,CAAA,EACvB,CAAA"}